<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bitburner Save Modifier</title>
    <style>
        body {
            font-family: 'Courier New', monospace;
            background: #0a0a0a;
            color: #00ff00;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: #111;
            border: 2px solid #00ff00;
            padding: 20px;
            border-radius: 10px;
        }
        h1 { text-align: center; color: #00ffff; text-shadow: 0 0 10px #00ffff; }
        .section {
            background: #222;
            border: 1px solid #333;
            margin: 15px 0;
            padding: 15px;
            border-radius: 5px;
        }
        .section h3 { color: #ffff00; border-bottom: 1px solid #ffff00; padding-bottom: 5px; }
        textarea {
            width: 100%;
            height: 200px;
            background: #000;
            color: #00ff00;
            border: 1px solid #00ff00;
            font-family: 'Courier New', monospace;
            font-size: 12px;
            padding: 10px;
            resize: vertical;
        }
        input[type="number"], input[type="text"] {
            background: #000;
            color: #00ff00;
            border: 1px solid #00ff00;
            padding: 8px;
            width: 150px;
            font-family: 'Courier New', monospace;
        }
        button {
            background: #004400;
            color: #00ff00;
            border: 2px solid #00ff00;
            padding: 10px 20px;
            cursor: pointer;
            font-family: 'Courier New', monospace;
            font-weight: bold;
            border-radius: 5px;
            margin: 5px;
            transition: all 0.3s;
        }
        button:hover {
            background: #00ff00;
            color: #000;
            box-shadow: 0 0 10px #00ff00;
        }
        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 10px;
            margin: 10px 0;
        }
        .warning {
            background: #440000;
            border: 2px solid #ff0000;
            color: #ff8888;
            padding: 10px;
            border-radius: 5px;
            margin: 10px 0;
        }
        .success {
            background: #004400;
            border: 2px solid #00ff00;
            color: #88ff88;
            padding: 10px;
            border-radius: 5px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üöÄ Bitburner Save Modifier v2.0 üöÄ</h1>
        
        <div class="warning">
            <strong>‚ö†Ô∏è ATTENTION :</strong> Toujours faire une sauvegarde avant modification !<br>
            Cet outil modifie votre sauvegarde Bitburner de mani√®re s√©curis√©e.
        </div>

        <div class="section">
            <h3>üìã 1. Coller votre sauvegarde JSON</h3>
            <textarea id="saveInput" placeholder="Collez ici votre sauvegarde export√©e de Bitburner..."></textarea>
            <button onclick="parseSave()">üîç Analyser la sauvegarde</button>
        </div>

        <div class="section">
            <h3>üí∞ 2. Modifications rapides</h3>
            <div class="grid">
                <div>
                    <label>Argent: <input type="text" id="money" placeholder="1000000000"></label>
                </div>
                <div>
                    <label>Hacking: <input type="number" id="hacking" placeholder="1000"></label>
                </div>
                <div>
                    <label>Force: <input type="number" id="strength" placeholder="500"></label>
                </div>
                <div>
                    <label>D√©fense: <input type="number" id="defense" placeholder="500"></label>
                </div>
                <div>
                    <label>Dext√©rit√©: <input type="number" id="dexterity" placeholder="500"></label>
                </div>
                <div>
                    <label>Agilit√©: <input type="number" id="agility" placeholder="500"></label>
                </div>
                <div>
                    <label>Charisme: <input type="number" id="charisma" placeholder="500"></label>
                </div>
                <div>
                    <label>HP Max: <input type="number" id="maxHp" placeholder="1000"></label>
                </div>
            </div>
        </div>

        <div class="section">
            <h3>üîß 3. Modifications avanc√©es</h3>
            <button onclick="addAllPrograms()">üìÅ Ajouter tous les programmes</button>
            <button onclick="maxReputation()">‚≠ê R√©putation max (toutes factions)</button>
            <button onclick="addExploits()">üèÜ Ajouter exploits (achievements)</button>
            <button onclick="upgradeServers()">üñ•Ô∏è Upgrade serveurs max RAM</button>
        </div>

        <div class="section">
            <h3>‚úÖ 4. Appliquer et exporter</h3>
            <button onclick="applyModifications()">üöÄ Appliquer les modifications</button>
            <button onclick="exportSave()">üì§ Exporter la sauvegarde modifi√©e</button>
            <button onclick="copyToClipboard()">üìã Copier dans le presse-papier</button>
        </div>

        <div class="section">
            <h3>üìä 5. R√©sultat</h3>
            <textarea id="saveOutput" placeholder="La sauvegarde modifi√©e appara√Ætra ici..." readonly></textarea>
        </div>

        <div id="status"></div>
    </div>

    <script>
        let saveData = null;

        function showStatus(message, type = 'info') {
            const statusDiv = document.getElementById('status');
            statusDiv.className = type === 'success' ? 'success' : type === 'error' ? 'warning' : '';
            statusDiv.innerHTML = `<strong>${type === 'success' ? '‚úÖ' : type === 'error' ? '‚ùå' : '‚ÑπÔ∏è'}</strong> ${message}`;
            setTimeout(() => statusDiv.innerHTML = '', 5000);
        }

        function parseSave() {
            const input = document.getElementById('saveInput').value.trim();
            if (!input) {
                showStatus('Veuillez coller votre sauvegarde d\'abord !', 'error');
                return;
            }

            try {
                saveData = JSON.parse(input);
                if (!saveData.PlayerSave) {
                    throw new Error('Format de sauvegarde invalide');
                }
                
                // Remplir les champs avec les valeurs actuelles
                document.getElementById('money').value = saveData.PlayerSave.money || 0;
                document.getElementById('hacking').value = saveData.PlayerSave.hacking || 1;
                document.getElementById('strength').value = saveData.PlayerSave.strength || 10;
                document.getElementById('defense').value = saveData.PlayerSave.defense || 10;
                document.getElementById('dexterity').value = saveData.PlayerSave.dexterity || 10;
                document.getElementById('agility').value = saveData.PlayerSave.agility || 10;
                document.getElementById('charisma').value = saveData.PlayerSave.charisma || 10;
                document.getElementById('maxHp').value = saveData.PlayerSave.max_hp || 100;
                
                showStatus('Sauvegarde analys√©e avec succ√®s !', 'success');
            } catch (error) {
                showStatus('Erreur lors de l\'analyse: ' + error.message, 'error');
            }
        }

        function addAllPrograms() {
            if (!saveData) { showStatus('Analysez d\'abord votre sauvegarde !', 'error'); return; }
            
            const allPrograms = [
                "NUKE.exe", "BruteSSH.exe", "FTPCrack.exe", "relaySMTP.exe",
                "HTTPWorm.exe", "SQLInject.exe", "DeepscanV1.exe", "DeepscanV2.exe",
                "ServerProfiler.exe", "AutoLink.exe", "Formulas.exe"
            ];
            
            saveData.PlayerSave.programs = allPrograms;
            showStatus('Tous les programmes ajout√©s !', 'success');
        }

        function maxReputation() {
            if (!saveData) { showStatus('Analysez d\'abord votre sauvegarde !', 'error'); return; }
            
            const factions = ["CyberSec", "NiteSec", "The Black Hand", "BitRunners", "ECorp", "MegaCorp", "Illuminati", "Daedalus"];
            saveData.PlayerSave.factionRep = saveData.PlayerSave.factionRep || {};
            
            factions.forEach(faction => {
                saveData.PlayerSave.factionRep[faction] = 999999;
            });
            
            showStatus('R√©putation maximis√©e pour toutes les factions !', 'success');
        }

        function addExploits() {
            if (!saveData) { showStatus('Analysez d\'abord votre sauvegarde !', 'error'); return; }
            
            const exploits = ["Unclickable", "EditSaveFile", "Document", "YoureNotMeantToAccessThis"];
            saveData.PlayerSave.exploits = [...new Set([...(saveData.PlayerSave.exploits || []), ...exploits])];
            
            showStatus('Exploits ajout√©s pour les achievements !', 'success');
        }

        function upgradeServers() {
            if (!saveData) { showStatus('Analysez d\'abord votre sauvegarde !', 'error'); return; }
            
            if (saveData.PlayerSave.purchasedServers) {
                saveData.PlayerSave.purchasedServers.forEach(server => {
                    server.maxRam = 1048576; // 1 PB
                    server.ramUsed = 0;
                });
                showStatus('Serveurs upgrad√©s √† 1 PB de RAM !', 'success');
            } else {
                showStatus('Aucun serveur achet√© trouv√©', 'error');
            }
        }

        function applyModifications() {
            if (!saveData) { showStatus('Analysez d\'abord votre sauvegarde !', 'error'); return; }
            
            // Appliquer les modifications des champs
            const money = document.getElementById('money').value;
            if (money) saveData.PlayerSave.money = parseFloat(money);
            
            const hacking = document.getElementById('hacking').value;
            if (hacking) saveData.PlayerSave.hacking = parseInt(hacking);
            
            const strength = document.getElementById('strength').value;
            if (strength) saveData.PlayerSave.strength = parseInt(strength);
            
            const defense = document.getElementById('defense').value;
            if (defense) saveData.PlayerSave.defense = parseInt(defense);
            
            const dexterity = document.getElementById('dexterity').value;
            if (dexterity) saveData.PlayerSave.dexterity = parseInt(dexterity);
            
            const agility = document.getElementById('agility').value;
            if (agility) saveData.PlayerSave.agility = parseInt(agility);
            
            const charisma = document.getElementById('charisma').value;
            if (charisma) saveData.PlayerSave.charisma = parseInt(charisma);
            
            const maxHp = document.getElementById('maxHp').value;
            if (maxHp) {
                saveData.PlayerSave.max_hp = parseInt(maxHp);
                saveData.PlayerSave.hp = parseInt(maxHp);
            }
            
            // Mettre √† jour l'affichage
            document.getElementById('saveOutput').value = JSON.stringify(saveData, null, 2);
            showStatus('Modifications appliqu√©es avec succ√®s !', 'success');
        }

        function exportSave() {
            if (!saveData) { showStatus('Aucune modification √† exporter !', 'error'); return; }
            
            const blob = new Blob([JSON.stringify(saveData, null, 2)], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'bitburner-modified-save.json';
            a.click();
            URL.revokeObjectURL(url);
            
            showStatus('Sauvegarde t√©l√©charg√©e !', 'success');
        }

        function copyToClipboard() {
            const output = document.getElementById('saveOutput').value;
            if (!output) { showStatus('Aucune sauvegarde √† copier !', 'error'); return; }
            
            navigator.clipboard.writeText(output).then(() => {
                showStatus('Sauvegarde copi√©e dans le presse-papier !', 'success');
            }).catch(() => {
                showStatus('Erreur lors de la copie', 'error');
            });
        }
    </script>
</body>
</html>
